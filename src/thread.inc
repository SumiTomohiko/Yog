/**
 * This file was generated by "tools/inst.py src/insts.def" automatically.
 * DO NOT TOUCH!!
 */

#line 6 "src/thread.inc"
    case OP(PUSH_CONST):
    {
            Yog_assert(env, PC < YogByteArray_size(env, CODE->insts), "");
            uint8_t index = *((uint8_t*)&CODE->insts->items[PC]);
            PC += sizeof(uint8_t);
            YogVal val = YogVal_nil();
#line 18 "src/insts.def"
#line 14 "src/thread.inc"
            PUSH(val);
        break;
    }
#line 18 "src/thread.inc"
    case OP(CALL_METHOD):
    {
            Yog_assert(env, PC < YogByteArray_size(env, CODE->insts), "");
            ID method = *((ID*)&CODE->insts->items[PC]);
            PC += sizeof(ID);
            Yog_assert(env, PC < YogByteArray_size(env, CODE->insts), "");
            uint8_t argc = *((uint8_t*)&CODE->insts->items[PC]);
            PC += sizeof(uint8_t);
#line 25 "src/insts.def"
#line 28 "src/thread.inc"
        break;
    }
#line 31 "src/thread.inc"
    case OP(STORE_PKG):
    {
            Yog_assert(env, PC < YogByteArray_size(env, CODE->insts), "");
            ID id = *((ID*)&CODE->insts->items[PC]);
            PC += sizeof(ID);
            Yog_assert(env, 0 < YogValArray_size(env, STACK), "");
            POP();
#line 32 "src/insts.def"
#line 40 "src/thread.inc"
        break;
    }
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4 filetype=c
 */
