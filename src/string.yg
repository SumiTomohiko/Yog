
def inspect()
  return "\"" + self.gsub("\\", "\\\\").gsub("\"", "\\\"") + "\""
end

def slice(pos, len=nil)
  if self.size <= pos
    return ""
  end

  if pos < 0
    pos = self.size + pos
  end
  max_len = self.size - pos
  if (len == nil) || (max_len < len)
    len = max_len
  elif len < 0
    return ""
  end

  s = ""
  len.times() do [i]
    s << self[pos + i]
  end
  return s
end

def dup()
  return self.slice(0, self.size)
end

def rtrim()
  m = (self =~ /[ \t\n\r]*\Z/)
  return self.slice(0, m.start(0))
end

def ltrim()
  m = (self =~ /\A[ \t\n\r]*/)
  return self.slice(m.end(0))
end

def trim()
  return self.ltrim().rtrim()
end

def find(substr)
  NotFound = -1
  if self.size < substr.size
    return NotFound
  end

  i = 0
  while i < self.size - substr.size
    j = 0
    while j < substr.size
      if self[i + j] != substr[j]
        break
      end
      j += 1
    end
    if j == substr.size
      return i
    end
    i += 1
  end

  return NotFound
end

def format(*args, **kw)
  s = ""
  i = 0
  while i < self.size
    c1 = self[i]
    if (c1 == "}")
      i += 1
      c2 = self[i]
      if (c2 == "}")
        i += 1
        s << c2
        next
      end
      raise ValueError.new("Single \"}\" encountered in format string")
    end
    if (c1 != "{")
      s << c1
      i += 1
      next
    end
    i += 1
    c2 = self[i]
    if (c2 == "{")
      s << c2
      i += 1
      next
    end
    t = c2
    i += 1
    while self[i] != "}"
      t << self[i]
      i += 1
    end
    s << args[t.to_i()].to_s()
    i += 1
  end

  return s
end

# vim: tabstop=2 shiftwidth=2 expandtab softtabstop=2
