
def get(key, default=nil)
  try
    return self[key]
  except KeyError
    return default
  end
end

def get_values()
  values = []
  self.each() do |_, value|
    values << value
  end
  return values
end

values = property(get_values)

def get_keys()
  keys = []
  self.each() do |key, _|
    keys << key
  end
  return keys
end

keys = property(get_keys)

def to_s()
  def f(obj)
    return "{...}"
  end

  def g(obj)
    a = []
    obj.each() do |key, value|
      a.push(key.inspect() + ": " + value.inspect())
    end
    return "{ " + a.join(", ") + " }"
  end

  return __recurse__(self, f, g)
end

# vim: tabstop=2 shiftwidth=2 expandtab softtabstop=2
