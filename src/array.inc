"\n"
"def join(sep)\n"
"  s = \"\"\n"
"  i = 0\n"
"  self.each() do [elem]\n"
"    nonlocal i\n"
"    if 0 < i\n"
"      s << sep\n"
"    end\n"
"    s << elem\n"
"    i += 1\n"
"  end\n"
"\n"
"  return s\n"
"end\n"
"\n"
"def include?(obj)\n"
"  self.each() do [elem]\n"
"    if (elem.class == obj.class) && (elem == obj)\n"
"      return true\n"
"    end\n"
"  end\n"
"\n"
"  return false\n"
"end\n"
"\n"
"def to_s()\n"
"  def f(obj)\n"
"    return \"[...]\"\n"
"  end\n"
"\n"
"  def g(obj)\n"
"    a = []\n"
"    obj.each() do [elem]\n"
"      a.push(elem.to_s())\n"
"    end\n"
"    return \"[\" + a.join(\", \") + \"]\"\n"
"  end\n"
"\n"
"  return __recurse__(self, f, g)\n"
"end\n"
"\n"
