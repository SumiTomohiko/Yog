#if !defined(__YOG_CLASS_H__)
#define __YOG_CLASS_H__

#if defined(HAVE_STDINT_H)
#   include <stdint.h>
#endif
#include "yog/object.h"
#include "yog/yog.h"

typedef void (*GetAttrExecutor)(YogEnv*, YogVal, ID);
typedef YogVal (*GetAttrCaller)(YogEnv*, YogVal, ID);
typedef void (*Executor)(YogEnv*, YogVal, uint8_t, YogVal*, uint8_t, YogVal*, YogVal, YogVal, YogVal);
typedef YogVal (*Caller)(YogEnv*, YogVal, uint8_t, YogVal*, uint8_t, YogVal*, YogVal, YogVal, YogVal);

struct YogClass {
    YOGOBJ_HEAD;
    YogVal super;
    Allocator allocator;
    ID name;
    GetAttrExecutor exec_get_attr;
    GetAttrCaller call_get_attr;
    void (*exec_get_descr)(YogEnv*, YogVal, YogVal, YogVal);
    YogVal (*call_get_descr)(YogEnv*, YogVal, YogVal, YogVal);
    void (*exec_set_descr)(YogEnv*, YogVal, YogVal, YogVal);
    Executor exec;
    Caller call;
};

typedef struct YogClass YogClass;

DECL_AS_TYPE(YogClass_new);
#define TYPE_CLASS TO_TYPE(YogClass_new)

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */
/* src/class.c */
YOG_EXPORT YogVal YogClass_alloc(YogEnv*, YogVal);
YOG_EXPORT void YogClass_boot(YogEnv*, YogVal, YogVal);
YOG_EXPORT void YogClass_class_init(YogEnv*, YogVal, YogVal);
YOG_EXPORT void YogClass_define_allocator(YogEnv*, YogVal, Allocator);
YOG_EXPORT void YogClass_define_caller(YogEnv*, YogVal, Caller);
YOG_EXPORT void YogClass_define_class_method(YogEnv*, YogVal, YogVal, const char*, YogAPI);
YOG_EXPORT void YogClass_define_descr_get_caller(YogEnv*, YogVal, YogVal (*)(YogEnv*, YogVal, YogVal, YogVal));
YOG_EXPORT void YogClass_define_descr_get_executor(YogEnv*, YogVal, void (*)(YogEnv*, YogVal, YogVal, YogVal));
YOG_EXPORT void YogClass_define_descr_set_executor(YogEnv*, YogVal, void (*)(YogEnv*, YogVal, YogVal, YogVal));
YOG_EXPORT void YogClass_define_executor(YogEnv*, YogVal, Executor);
YOG_EXPORT void YogClass_define_get_attr_caller(YogEnv*, YogVal, GetAttrCaller);
YOG_EXPORT void YogClass_define_get_attr_executor(YogEnv*, YogVal, GetAttrExecutor);
YOG_EXPORT void YogClass_define_method(YogEnv*, YogVal, YogVal, const char*, YogAPI);
YOG_EXPORT void YogClass_define_property(YogEnv*, YogVal, YogVal, const char*, YogAPI, YogAPI);
YOG_EXPORT YogVal YogClass_get_attr(YogEnv*, YogVal, ID);
YOG_EXPORT void YogClass_include_module(YogEnv*, YogVal, YogVal);
YOG_EXPORT void YogClass_init(YogEnv*, YogVal, type_t, YogVal);
YOG_EXPORT void YogClass_keep_children(YogEnv*, void*, ObjectKeeper, void*);
YOG_EXPORT YogVal YogClass_new(YogEnv*, const char*, YogVal);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
