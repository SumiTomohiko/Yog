#if !defined(YOG_FIXNUM_H_INCLUDED)
#define YOG_FIXNUM_H_INCLUDED

#include "yog/yog.h"

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */
/* src/fixnum.c */
YOG_EXPORT YogVal YogFixnum_add_bignum(YogEnv*, YogVal, YogVal);
YOG_EXPORT YogVal YogFixnum_binop_add(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT YogVal YogFixnum_binop_and(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT YogVal YogFixnum_binop_divide(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT YogVal YogFixnum_binop_floor_divide(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT YogVal YogFixnum_binop_lshift(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT YogVal YogFixnum_binop_modulo(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT YogVal YogFixnum_binop_multiply(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT YogVal YogFixnum_binop_or(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT YogVal YogFixnum_binop_power(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT YogVal YogFixnum_binop_rshift(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT YogVal YogFixnum_binop_subtract(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT YogVal YogFixnum_binop_ufo(YogEnv*, YogVal, YogVal);
YOG_EXPORT YogVal YogFixnum_binop_xor(YogEnv*, YogVal, YogHandle*);
YOG_EXPORT void YogFixnum_define_classes(YogEnv*, YogVal);
YOG_EXPORT uint_t YogFixnum_to_uint(YogEnv*, YogVal, const char*);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
