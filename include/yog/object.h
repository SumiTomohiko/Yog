#if !defined(__YOG_OBJECT_H__)
#define __YOG_OBJECT_H__

#include "yog/yog.h"

typedef uint_t type_t;

struct YogBasicObj {
    type_t type;
    uint_t id_upper;
    uint_t id_lower;
    flags_t flags;
    YogVal klass;
};

#define TYPE_BASIC_OBJ  ((type_t)YogBasicObj_init)

#define HAS_ATTRS       (1 << 0)
#define FLAG_PKG        (1 << 1)

#define YOGBASICOBJ_HEAD    struct YogBasicObj base
#define BASIC_OBJ(v)        PTR_AS(YogBasicObj, (v))
#define BASIC_OBJ_TYPE(v)   BASIC_OBJ(v)->type

typedef struct YogBasicObj YogBasicObj;

struct YogObj {
    YOGBASICOBJ_HEAD;
    YogVal attrs;
};

#define TYPE_OBJ    ((type_t)YogObj_new)

#define YOGOBJ_HEAD struct YogObj base
#define YOGOBJ(obj) ((struct YogObj*)obj)

typedef struct YogObj YogObj;

typedef YogVal (*Allocator)(struct YogEnv*, YogVal);

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */
/* src/object.c */
YOG_EXPORT void YogBasicObj_init(YogEnv*, YogVal, type_t, uint_t, YogVal);
YOG_EXPORT void YogBasicObj_keep_children(YogEnv*, void*, ObjectKeeper, void*);
YOG_EXPORT YogVal YogObj_alloc(YogEnv*, YogVal);
YOG_EXPORT void YogObj_class_init(YogEnv*, YogVal, YogVal);
YOG_EXPORT YogVal YogObj_get_attr(YogEnv*, YogVal, ID);
YOG_EXPORT void YogObj_init(YogEnv*, YogVal, uint_t, uint_t, YogVal);
YOG_EXPORT void YogObj_keep_children(YogEnv*, void*, ObjectKeeper, void*);
YOG_EXPORT YogVal YogObj_new(YogEnv*, YogVal);
YOG_EXPORT void YogObj_set_attr(YogEnv*, YogVal, const char*, YogVal);
YOG_EXPORT void YogObj_set_attr_id(YogEnv*, YogVal, ID, YogVal);
YOG_EXPORT void YogObject_boot(YogEnv*, YogVal, YogVal);
YOG_EXPORT void YogObject_eval_builtin_script(YogEnv*, YogVal);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
