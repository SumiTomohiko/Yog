#if !defined(__COPYING_H__)
#define __COPYING_H__

#define ERR_COPYING_NONE            0
#define ERR_COPYING_OUT_OF_MEMORY   1

#include <stddef.h>
#include "yog/gc.h"
#include "yog/yog.h"

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */
/* src/gc/copying.c */
YOG_EXPORT void* YogCopying_alloc(YogEnv*, YogHeap*, ChildrenKeeper, Finalizer, size_t);
YOG_EXPORT void YogCopying_cheney_scan(YogEnv*, YogHeap*);
YOG_EXPORT void* YogCopying_copy(YogEnv*, YogHeap*, void*);
YOG_EXPORT void YogCopying_delete(YogEnv*, YogHeap*);
YOG_EXPORT void YogCopying_delete_garbage(YogEnv*, YogHeap*);
YOG_EXPORT BOOL YogCopying_is_empty(YogEnv*, YogHeap*);
YOG_EXPORT void YogCopying_keep_vm(YogEnv*, YogHeap*);
YOG_EXPORT YogHeap* YogCopying_new(YogEnv*, uint_t);
YOG_EXPORT void YogCopying_post_gc(YogEnv*, YogHeap*);
YOG_EXPORT void YogCopying_prepare(YogEnv*, YogHeap*);
YOG_EXPORT void YogCopying_scan(YogEnv*, YogHeap*, ObjectKeeper, void*);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
