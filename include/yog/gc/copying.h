#ifndef __COPYING_H__
#define __COPYING_H__

/* TODO: commonize with yog/yog.h */
#ifndef __YOG_YOG_H__
typedef int BOOL;
#define FALSE   0
#define TRUE    (!(FALSE))
typedef struct YogEnv YogEnv;
typedef void* (*ObjectKeeper)(YogEnv*, void*);
typedef void (*ChildrenKeeper)(YogEnv*, void*, ObjectKeeper);
typedef void (*Finalizer)(YogEnv*, void*);
#endif

#define ERR_COPYING_NONE            0
#define ERR_COPYING_MALLOC          1
#define ERR_COPYING_OUT_OF_MEMORY   2

struct YogCopying {
    unsigned int err;
    BOOL stress;
    struct YogCopyingHeap* active_heap;
    struct YogCopyingHeap* inactive_heap;
    unsigned char* scanned;
    unsigned char* unscanned;
    void* root;
    ChildrenKeeper root_keeper;
};

typedef struct YogCopying YogCopying;

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */

/* src/gc/copying.c */
void* YogCopying_alloc(YogEnv*, YogCopying*, ChildrenKeeper, Finalizer, size_t);
void YogCopying_finalize(YogEnv*, YogCopying*);
void YogCopying_gc(YogEnv*, YogCopying*);
void YogCopying_initialize(YogEnv*, YogCopying*, BOOL, size_t, void*, ChildrenKeeper);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
