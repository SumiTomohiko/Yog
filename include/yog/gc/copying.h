#if !defined(__YOG_GC_COPYING_H__)
#define __YOG_GC_COPYING_H__

#include <stddef.h>
#include "yog/gc.h"
#include "yog/yog.h"

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */
/* src/gc/copying.c */
void* YogCopying_alloc(YogEnv*, YogHeap*, ChildrenKeeper, Finalizer, size_t);
void YogCopying_cheney_scan(YogEnv*, YogHeap*);
void* YogCopying_copy(YogEnv*, YogHeap*, void*);
void YogCopying_delete(YogEnv*, YogHeap*);
void YogCopying_delete_garbage(YogEnv*, YogHeap*);
Finalizer YogCopying_get_finalizer(YogEnv*, YogHeap*, void*);
void* YogCopying_get_forwarding_addr(YogEnv*, YogHeap*, void*);
ChildrenKeeper YogCopying_get_keeper(YogEnv*, YogHeap*, void*);
size_t YogCopying_get_payload_size(YogEnv*, YogHeap*, void*);
BOOL YogCopying_is_empty(YogEnv*, YogHeap*);
BOOL YogCopying_is_finished(YogEnv*, YogHeap*);
void YogCopying_keep_root(YogEnv*, void*, ChildrenKeeper, YogHeap*);
YogHeap* YogCopying_new(YogEnv*, uint_t);
void YogCopying_post_gc(YogEnv*, YogHeap*);
void YogCopying_prepare(YogEnv*, YogHeap*);
void YogCopying_scan(YogEnv*, YogHeap*, ObjectKeeper, void*);
void YogCopying_set_forwarding_addr(YogEnv*, YogHeap*, void*, void*);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
