#if !defined(__YOG_GC_MARK_SWEEP_COMPACT_H__)
#define __YOG_GC_MARK_SWEEP_COMPACT_H__

#include <stddef.h>
#include "yog/gc.h"
#include "yog/yog.h"

struct YogMarkSweepCompactHeader {
    unsigned int flags;
    struct YogMarkSweepCompactHeader* forwarding_addr;
    struct YogMarkSweepCompactHeader* prev;
    struct YogMarkSweepCompactHeader* next;
    ChildrenKeeper keeper;
    Finalizer finalizer;
    BOOL marked;
    BOOL updated;
    size_t size;
#if defined(GC_GENERATIONAL)
    unsigned int gen;
#endif
};

#define OBJ_USED        0x01
#define IS_OBJ_USED(o)  ((o)->flags & OBJ_USED)

typedef struct YogMarkSweepCompactHeader YogMarkSweepCompactHeader;

#define MARK_SWEEP_COMPACT_NUM_SIZE         7
#define MARK_SWEEP_COMPACT_SIZE2INDEX_SIZE  2049

#define ERR_MSC_NONE    0
#define ERR_MSC_MMAP    1
#define ERR_MSC_MUNMAP  2
#define ERR_MSC_MALLOC  3
#if defined(GC_GENERATIONAL)
#   define ERR_MSC_MPROTECT     4
#endif

struct YogMarkSweepCompact {
    struct YogMarkSweepCompact* prev;
    struct YogMarkSweepCompact* next;
    BOOL refered;

    unsigned int err;
    size_t chunk_size;
    struct YogMarkSweepCompactChunk* chunks;
    struct YogMarkSweepCompactChunk* all_chunks;
    struct YogMarkSweepCompactChunk* all_chunks_last;
    struct YogMarkSweepCompactPage* pages[MARK_SWEEP_COMPACT_NUM_SIZE];
    size_t freelist_size[MARK_SWEEP_COMPACT_NUM_SIZE];
    unsigned int size2index[MARK_SWEEP_COMPACT_SIZE2INDEX_SIZE];
    struct YogMarkSweepCompactHeader* header;
    size_t threshold;
    size_t allocated_size;
    void* root;
    ChildrenKeeper root_keeper;
#if defined(GC_GENERATIONAL)
    BOOL in_gc;
    unsigned char* grey_pages;
#endif
};

typedef struct YogMarkSweepCompact YogMarkSweepCompact;

struct YogMarkSweepCompactPage {
    uint_t flags;
    struct YogMarkSweepCompactPage* next;
    size_t obj_size;
    uint_t num_obj;
    uint_t num_obj_avail;
    struct YogMarkSweepCompactFreeList* freelist;
    struct YogMarkSweepCompactChunk* chunk;
};

#define PAGE_USED           0x01
#define IS_PAGE_USED(p)     ((p)->flags & PAGE_USED)

typedef struct YogMarkSweepCompactPage YogMarkSweepCompactPage;

struct YogCompactor {
    struct YogMarkSweepCompactChunk* cur_chunk;
    struct YogMarkSweepCompactPage* next_page;
    struct YogMarkSweepCompactPage* cur_page[MARK_SWEEP_COMPACT_NUM_SIZE];
    uint_t cur_index[MARK_SWEEP_COMPACT_NUM_SIZE];
};

typedef struct YogCompactor YogCompactor;

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */
/* src/gc/mark-sweep-compact.c */
YOG_EXPORT void YogCompactor_init(YogEnv*, YogCompactor*);
YOG_EXPORT void* YogMarkSweepCompact_alloc(YogEnv*, YogMarkSweepCompact*, ChildrenKeeper, Finalizer, size_t);
YOG_EXPORT void YogMarkSweepCompact_alloc_virtually(YogEnv*, YogMarkSweepCompact*, YogCompactor*);
YOG_EXPORT void YogMarkSweepCompact_delete(YogEnv*, YogHeap*);
YOG_EXPORT void YogMarkSweepCompact_delete_garbage(YogEnv*, YogMarkSweepCompact*);
YOG_EXPORT void YogMarkSweepCompact_grey_page(void*);
YOG_EXPORT BOOL YogMarkSweepCompact_install_sigsegv_handler(YogEnv*);
YOG_EXPORT BOOL YogMarkSweepCompact_is_empty(YogEnv*, YogMarkSweepCompact*);
YOG_EXPORT void YogMarkSweepCompact_keep_vm(YogEnv*, YogMarkSweepCompact*);
YOG_EXPORT void* YogMarkSweepCompact_mark_recursively(YogEnv*, void*, ObjectKeeper, void*);
YOG_EXPORT void YogMarkSweepCompact_move_objs(YogEnv*, YogMarkSweepCompact*, YogCompactor*);
YOG_EXPORT YogHeap* YogMarkSweepCompact_new(YogEnv*, size_t, size_t);
YOG_EXPORT void YogMarkSweepCompact_post_gc(YogEnv*, YogMarkSweepCompact*);
YOG_EXPORT void YogMarkSweepCompact_prepare(YogEnv*, YogMarkSweepCompact*);
YOG_EXPORT void YogMarkSweepCompact_protect_white_pages(YogEnv*, YogMarkSweepCompact*);
YOG_EXPORT void YogMarkSweepCompact_shrink(YogEnv*, YogMarkSweepCompact*, YogCompactor*, YogMarkSweepCompactPage*);
YOG_EXPORT void YogMarkSweepCompact_trace_grey_children(YogEnv*, YogMarkSweepCompact*, void*);
YOG_EXPORT void YogMarkSweepCompact_unprotect_all_pages(YogEnv*, YogMarkSweepCompact*);
YOG_EXPORT void YogMarkSweepCompact_update_front_header(YogEnv*, YogMarkSweepCompact*);
YOG_EXPORT void* YogMarkSweepCompact_update_ptr(YogEnv*, void*, void*);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
