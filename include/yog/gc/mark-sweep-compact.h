#ifndef __YOG_GC_MARK_SWEEP_COMPACT__
#define __YOG_GC_MARK_SWEEP_COMPACT__

#include <stddef.h>

/* TODO: commonize with yog/yog.h */
#define BOOL    int
#define FALSE   (0)
#define TRUE    (!FALSE)
typedef struct YogEnv YogEnv;
typedef void* (*ObjectKeeper)(YogEnv*, void*);
typedef void (*ChildrenKeeper)(YogEnv*, void*, ObjectKeeper);
typedef void (*Finalizer)(YogEnv*, void*);

#define SURVIVE_INDEX_MAX    8

#define MARK_SWEEP_COMPACT_NUM_SIZE         7
#define MARK_SWEEP_COMPACT_SIZE2INDEX_SIZE  2049

#define PAGE_SIZE       4096
#define PTR2PAGE(p)     ((YogMarkSweepCompactPage*)((uintptr_t)(p) & ~(PAGE_SIZE - 1)))

struct YogMarkSweepCompactFreeList {
    struct YogMarkSweepCompactFreeList* next;
};

typedef struct YogMarkSweepCompactFreeList YogMarkSweepCompactFreeList;

struct YogMarkSweepCompactChunk {
    struct YogMarkSweepCompactChunk* next;
    struct YogMarkSweepCompactChunk* all_chunks_next;
    struct YogMarkSweepCompactFreeList* pages;
    struct YogMarkSweepCompactPage* first_page;
};

typedef struct YogMarkSweepCompactChunk YogMarkSweepCompactChunk;

struct YogMarkSweepCompactPage {
    unsigned int flags;
    struct YogMarkSweepCompactPage* next;
    size_t obj_size;
    unsigned int num_obj;
    unsigned int num_obj_avail;
    struct YogMarkSweepCompactFreeList* freelist;
    struct YogMarkSweepCompactChunk* chunk;
};

#define PAGE_USED           0x01
#define IS_PAGE_USED(p)     ((p)->flags & PAGE_USED)

typedef struct YogMarkSweepCompactPage YogMarkSweepCompactPage;

struct YogMarkSweepCompactHeader {
    unsigned int flags;
#if 0
    struct GcObjectStat stat;
#endif
    struct YogMarkSweepCompactHeader* forwarding_addr;
    struct YogMarkSweepCompactHeader* prev;
    struct YogMarkSweepCompactHeader* next;
    ChildrenKeeper keeper;
    Finalizer finalizer;
    BOOL marked;
    BOOL updated;
    size_t size;
};

#define OBJ_USED        0x01
#define IS_OBJ_USED(o)  ((o)->flags & OBJ_USED)

typedef struct YogMarkSweepCompactHeader YogMarkSweepCompactHeader;

struct YogMarkSweepCompact {
    size_t chunk_size;
    struct YogMarkSweepCompactChunk* chunks;
    struct YogMarkSweepCompactChunk* all_chunks;
    struct YogMarkSweepCompactChunk* all_chunks_last;
    struct YogMarkSweepCompactPage* pages[MARK_SWEEP_COMPACT_NUM_SIZE];
    struct YogMarkSweepCompactLargeObject* large_obj;
    size_t freelist_size[MARK_SWEEP_COMPACT_NUM_SIZE];
    unsigned int size2index[MARK_SWEEP_COMPACT_SIZE2INDEX_SIZE];
    struct YogMarkSweepCompactHeader* header;
    size_t threshold;
    size_t allocated_size;
};

typedef struct YogMarkSweepCompact YogMarkSweepCompact;

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */

/* src/gc/mark-sweep-compact.c */
void* YogMarkSweepCompact_alloc(YogMarkSweepCompact*, size_t);
void YogMarkSweepCompact_finalize(YogMarkSweepCompact*);
void YogMarkSweepCompact_initialize(YogMarkSweepCompact*);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
