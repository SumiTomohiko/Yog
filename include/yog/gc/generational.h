#if !defined(__YOG_GC_GENERATIONAL_H__)
#define __YOG_GC_GENERATIONAL_H__

#include <stddef.h>
#include "yog/gc.h"
#include "yog/yog.h"

#if 0
/* TODO: commonize with yog/yog.h */
#if !defined(__YOG_YOG_H__) && !defined(__YOG_GC_GENERATIONAL_H__)
typedef int BOOL;
#define FALSE   0
#define TRUE    (!(FALSE))
typedef struct YogEnv YogEnv;
typedef void* (*ObjectKeeper)(YogEnv*, void*);
typedef void (*ChildrenKeeper)(YogEnv*, void*, ObjectKeeper);
typedef void (*Finalizer)(YogEnv*, void*);
#endif
#endif

#define ERR_GEN_NONE        0
#define ERR_GEN_MMAP        1
#define ERR_GEN_MUNMAP      2
#define ERR_GEN_MALLOC      3
#define ERR_GEN_UNKNOWN     4

struct YogGenerational {
    struct YogGenerational* prev;
    struct YogGenerational* next;
    BOOL refered;

    unsigned int err;
    struct YogHeap* copying;
    struct YogHeap* msc;
    unsigned int tenure;
    BOOL has_young_ref;
};

typedef struct YogGenerational YogGenerational;

#define PTR2GEN(p)      (*((unsigned int*)(p) - 1))
#define IS_YOUNG(p)     (PTR2GEN(p) == GEN_YOUNG)

#define GEN_YOUNG   1
#define GEN_OLD     2

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */
/* src/gc/generational.c */
YOG_EXPORT void* YogGenerational_alloc(YogEnv*, YogHeap*, ChildrenKeeper, Finalizer, size_t);
YOG_EXPORT void YogGenerational_alloc_heap(YogEnv*, YogHeap*);
YOG_EXPORT void* YogGenerational_copy_young_object(YogEnv*, void*, ObjectKeeper, void*);
YOG_EXPORT void YogGenerational_delete(YogEnv*, YogHeap*);
YOG_EXPORT BOOL YogGenerational_is_empty(YogEnv*, YogHeap*);
YOG_EXPORT void YogGenerational_major_cheney_scan(YogEnv*, YogHeap*);
YOG_EXPORT void YogGenerational_major_delete_garbage(YogEnv*, YogHeap*);
YOG_EXPORT void YogGenerational_major_keep_vm(YogEnv*, YogHeap*);
YOG_EXPORT void YogGenerational_major_post_gc(YogEnv*, YogHeap*);
YOG_EXPORT void YogGenerational_minor_cheney_scan(YogEnv*, YogHeap*);
YOG_EXPORT void YogGenerational_minor_delete_garbage(YogEnv*, YogHeap*);
YOG_EXPORT void YogGenerational_minor_keep_vm(YogEnv*, YogHeap*);
YOG_EXPORT void YogGenerational_minor_post_gc(YogEnv*, YogHeap*);
YOG_EXPORT YogHeap* YogGenerational_new(YogEnv*, size_t, size_t, size_t, uint_t);
YOG_EXPORT void YogGenerational_prepare(YogEnv*, YogHeap*);
YOG_EXPORT void YogGenerational_trace_grey(YogEnv*, YogHeap*);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
