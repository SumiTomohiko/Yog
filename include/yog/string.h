#if !defined(__YOG_STRING_H__)
#define __YOG_STRING_H__

#include "yog/object.h"
#include "yog/yog.h"

struct YogCharArray {
    unsigned int size;
    char items[0];
};

typedef struct YogCharArray YogCharArray;

struct YogString {
    YOGBASICOBJ_HEAD;
    YogVal encoding;
    unsigned int size;
    YogVal body;
};

typedef struct YogString YogString;

#define STRING_CSTR(s)  PTR_AS(YogCharArray, PTR_AS(YogString, s)->body)->items
#define STRING_SIZE(s)  PTR_AS(YogString, s)->size

#include "yog/encoding.h"

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */

/* src/string.c */
YogVal YogCharArray_new_str(YogEnv*, const char*);
void YogString_add(YogEnv*, YogVal, const char*);
char YogString_at(YogEnv*, YogVal, unsigned int);
void YogString_clear(YogEnv*, YogVal);
YogVal YogString_clone(YogEnv*, YogVal);
char* YogString_dup(YogEnv*, const char*);
ID YogString_intern(YogEnv*, YogVal);
YogVal YogString_klass_new(YogEnv*);
YogVal YogString_new(YogEnv*);
YogVal YogString_new_format(YogEnv*, const char*, ...);
YogVal YogString_new_range(YogEnv*, YogVal, const char*, const char*);
YogVal YogString_new_size(YogEnv*, unsigned int);
YogVal YogString_new_str(YogEnv*, const char*);
void YogString_push(YogEnv*, YogVal, char);
unsigned int YogString_size(YogEnv*, YogVal);
YogVal YogString_to_i(YogEnv*, YogVal);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
