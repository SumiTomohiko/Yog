#if !defined(YOG_STRING_H_INCLUDED)
#define YOG_STRING_H_INCLUDED

#include "yog/object.h"
#include "yog/yog.h"

#if SIZEOF_INT == 4
#   define CHAR_TYPE int
#elif SIZEOF_LONG == 4
#   define CHAR_TYPE long
#else
#   error "Can't determine type of charactor"
#endif
typedef unsigned CHAR_TYPE YogChar;

struct YogCharArray {
    uint_t size;
    YogChar items[0];
};

typedef struct YogCharArray YogCharArray;

struct YogString {
    struct YogBasicObj base;
    uint_t size;
    YogVal body;
};

typedef struct YogString YogString;

DECL_AS_TYPE(YogString_new);
#define TYPE_STRING TO_TYPE(YogString_new)

#define STRING_BODY(s)  PTR_AS(YogString, (s))->body
#define STRING_CHARS(s) PTR_AS(YogCharArray, STRING_BODY((s)))->items
#define STRING_SIZE(s)  PTR_AS(YogString, (s))->size

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */
/* src/string.c */
YOG_EXPORT void YogString_append(YogEnv*, YogVal, YogVal);
YOG_EXPORT void YogString_append_string(YogEnv*, YogVal, const char*);
YOG_EXPORT YogVal YogString_binop_add(YogEnv*, YogHandle*, YogHandle*);
YOG_EXPORT YogVal YogString_binop_lshift(YogEnv*, YogHandle*, YogHandle*);
YOG_EXPORT YogVal YogString_binop_multiply(YogEnv*, YogHandle*, YogVal);
YOG_EXPORT YogVal YogString_binop_search(YogEnv*, YogHandle*, YogHandle*);
YOG_EXPORT YogVal YogString_binop_ufo(YogEnv*, YogVal, YogVal);
YOG_EXPORT void YogString_clear(YogEnv*, YogVal);
YOG_EXPORT YogVal YogString_clone(YogEnv*, YogVal);
YOG_EXPORT void YogString_define_classes(YogEnv*, YogVal);
YOG_EXPORT void YogString_eval_builtin_script(YogEnv*, YogVal);
YOG_EXPORT int_t YogString_find_char(YogEnv*, YogVal, uint_t, YogChar);
YOG_EXPORT YogVal YogString_from_range(YogEnv*, YogVal, const char*, const char*);
YOG_EXPORT YogVal YogString_from_string(YogEnv*, const char*);
YOG_EXPORT int_t YogString_hash(YogEnv*, YogVal);
YOG_EXPORT ID YogString_intern(YogEnv*, YogVal);
YOG_EXPORT YogVal YogString_new(YogEnv*);
YOG_EXPORT YogVal YogString_of_size(YogEnv*, uint_t);
YOG_EXPORT void YogString_push(YogEnv*, YogVal, YogChar);
YOG_EXPORT YogVal YogString_search(YogEnv*, YogHandle*, YogHandle*, int_t);
YOG_EXPORT uint_t YogString_size(YogEnv*, YogVal);
YOG_EXPORT YogVal YogString_slice(YogEnv*, YogHandle*, uint_t, uint_t);
YOG_EXPORT int_t YogString_strncmp(YogEnv*, YogVal, YogVal, uint_t);
YOG_EXPORT int_t YogString_strrchr(YogEnv*, YogVal, char);
YOG_EXPORT int_t YogString_strstr(YogEnv*, YogVal, const char*);
YOG_EXPORT YogVal YogString_subscript(YogEnv*, YogVal, YogVal);
YOG_EXPORT YogVal YogString_to_bin_in_default_encoding(YogEnv*, YogHandle*);
YOG_EXPORT YogVal YogString_to_i(YogEnv*, YogVal);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
