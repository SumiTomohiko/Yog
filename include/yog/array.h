#if !defined(__YOG_ARRAY_H__)
#define __YOG_ARRAY_H__

#include "yog/object.h"
#include "yog/yog.h"

struct YogValArray {
    uint_t size;
    YogVal items[0];
};

typedef struct YogValArray YogValArray;

struct YogArray {
    YOGBASICOBJ_HEAD;
    uint_t size;
    YogVal body;
};

typedef struct YogArray YogArray;

/* PROTOTYPE_START */

/**
 * DON'T EDIT THIS AREA. HERE IS GENERATED BY update_prototype.py.
 */

/* src/array.c */
YogVal YogArray_add(YogEnv*, YogVal, YogVal);
YogVal YogArray_at(YogEnv*, YogVal, uint_t);
void YogArray_extend(YogEnv*, YogVal, YogVal);
YogVal YogArray_klass_new(YogEnv*);
YogVal YogArray_new(YogEnv*);
YogVal YogArray_of_size(YogEnv*, uint_t);
void YogArray_push(YogEnv*, YogVal, YogVal);
uint_t YogArray_size(YogEnv*, YogVal);
YogVal YogValArray_at(YogEnv*, YogVal, uint_t);
YogVal YogValArray_new(YogEnv*, uint_t);
uint_t YogValArray_size(YogEnv*, YogVal);

/* PROTOTYPE_END */

#endif
/**
 * vim: tabstop=4 shiftwidth=4 expandtab softtabstop=4
 */
