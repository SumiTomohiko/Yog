/* config.h.in.  Generated from configure.ac by autoheader.  */

/* The name of the include file describing the fault handler. */
#undef CFG_FAULT

/* The name of the file implementing the handler functionality. */
#define CFG_HANDLER "handler-win32.c"

/* The name of the file implementing sigsegv_reset_onstack_flag. */
#undef CFG_LEAVE

/* The name of the include file describing the Mach fault handler. */
#undef CFG_MACHFAULT

/* The name of the include file describing the fault signals. */
#undef CFG_SIGNALS

/* The name of the file determining the stack virtual memory area. */
#undef CFG_STACKVMA

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Define if getpagesize() is available as a function or a macro. */
#undef HAVE_GETPAGESIZE

/* Define to 1 if you have the `getrlimit' function. */
#undef HAVE_GETRLIMIT

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define to 1 if you have the `mincore' function. */
#undef HAVE_MINCORE

/* Define if <sys/mman.h> defines MAP_ANON and mmaping with MAP_ANON works. */
#undef HAVE_MMAP_ANON

/* Define if <sys/mman.h> defines MAP_ANONYMOUS and mmaping with MAP_ANONYMOUS
   works. */
#undef HAVE_MMAP_ANONYMOUS

/* Define if mmaping of the special device /dev/zero works. */
#undef HAVE_MMAP_DEVZERO

/* Define if PAGESIZE is available as a macro. */
#undef HAVE_PAGESIZE

/* Define to 1 if you have the `setrlimit' function. */
#undef HAVE_SETRLIMIT

/* Define to 1 if you have the `sigaltstack' function. */
#undef HAVE_SIGALTSTACK

/* Define if CFG_STACKVMA is set to a nontrivial source file. */
#undef HAVE_STACKVMA

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define if sysconf(_SC_PAGESIZE) is available as a function or a macro. */
#undef HAVE_SYSCONF_PAGESIZE

/* Define to 1 if you have the <sys/signal.h> header file. */
#undef HAVE_SYS_SIGNAL_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define if you have the sigaltstack() function and it works. */
#undef HAVE_WORKING_SIGALTSTACK

/* Define to the sub-directory in which libtool stores uninstalled libraries.
   */
#undef LT_OBJDIR

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define as the direction of stack growth for your system. STACK_DIRECTION >
   0 => grows toward higher addresses STACK_DIRECTION < 0 => grows toward
   lower addresses STACK_DIRECTION = 0 => spaghetti stack. */
#undef STACK_DIRECTION

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Version number of package */
#undef VERSION

/* Define to 'struct sigaltstack' if that's the type of the argument to
   sigaltstack */
#undef stack_t
