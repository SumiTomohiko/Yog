#!/bin/sh

print_done()
{
  echo "done"
}

run()
{
  "$@"
  if [ "$?" != 0 ]; then
    echo "Failed: $@"
    exit 1
  fi
}

python="python"
opts=`getopt p: "${*}"`
if [ $? != 0 ]; then
  echo "illegal option(s)"
  exit 1
fi
eval set -- "${opts}"
while :
do
  case "${1}" in
  -p)
    python="${2}"
    shift 2
    ;;
  --)
    shift 1
    break
    ;;
  *)
    break
    ;;
  esac
done

yog="src/yog-generational"

archive="${1}"
if [ -z "${archive}" ]; then
  echo "${0} <head>"
  exit 1
fi

dir="$$"
archive_dir="${dir}/${archive}"

echo -n "Extract source tree..."
run mkdir "${dir}"
run git archive "--prefix=${archive_dir}/" HEAD | run tar xf -
work_dir="/tmp/$$"
run mkdir -p "${work_dir}"
run mv "${archive_dir}" "${work_dir}"
run rmdir "${dir}"
print_done
run echo "Working directory is ${work_dir}"

run echo -n "Generate configure etc..."
src_root="${work_dir}/${archive}"
(cd "${src_root}" && run ./autogen.sh)
run rm -rf "${src_root}/autom4te.cache"
src_dir="${src_root}/src"
run grep -o "\$(YOG) yog2inc.yog [[:alnum:]_]\+.yog \$@" "${src_dir}/Makefile.am" | while read line
do
  prog=`echo "${line}" | cut -d " " -f 2`
  src=`echo "${line}" | cut -d " " -f 3`
  dst="`echo "${src}" | cut -d "." -f 1`.inc"
  run ${yog} "${src_dir}/${prog}" "${src_dir}/${src}" "${src_dir}/${dst}"
done
tools_dir="${src_root}/tools"
run ${yog} "${tools_dir}/make_errno.yog" "${tools_dir}/errno" "${src_dir}/errno.inc"
run ${python} "${tools_dir}/inst.py" "${src_dir}/insts.def" "${src_root}"
run gperf "${src_dir}/keywords" > "${src_dir}/keywords.inc"
(cd ${src_dir} && run ${python} "../tools/make_shift_jis_tables.py")
(cd ${src_dir} && run ${python} "../tools/make_euc_jp_tables.py")
print_done

echo -n "Generate HTML document..."
run make doc
run cp -r doc/html "${src_root}/doc"
print_done

echo -n "Archive .tar.gz..."
cwd=`pwd`
(cd "${work_dir}" && run tar czf "${cwd}/${archive}.tar.gz" "${archive}")
print_done
echo -n "Archive .tar.bz2..."
(cd "${work_dir}" && run tar cjf "${cwd}/${archive}.tar.bz2" "${archive}")
print_done
echo -n "Archive .tar.xz..."
(cd "${work_dir}" && run tar cf - "${archive}" | run xz --compress > "${cwd}/${archive}.tar.xz")
print_done
echo -n "Archive .zip..."
(cd "${work_dir}" && run zip -qr "${cwd}/${archive}.zip" "${archive}")
print_done

run rm -rf "${work_dir}"

# vim: tabstop=2 shiftwidth=2 expandtab softtabstop=2
